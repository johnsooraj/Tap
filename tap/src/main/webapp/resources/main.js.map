{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-auth.guard.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common-enums/uesr-types.ts","webpack:///./src/app/common-enums/user-permissions.ts","webpack:///./src/app/common-login/common-login.component.css","webpack:///./src/app/common-login/common-login.component.html","webpack:///./src/app/common-login/common-login.component.ts","webpack:///./src/app/common-login/common-login.service.ts","webpack:///./src/app/common-models/login-model.ts","webpack:///./src/app/page-notfound/page-notfound.component.css","webpack:///./src/app/page-notfound/page-notfound.component.html","webpack:///./src/app/page-notfound/page-notfound.component.ts","webpack:///./src/app/reset-password/reset-password.component.css","webpack:///./src/app/reset-password/reset-password.component.html","webpack:///./src/app/reset-password/reset-password.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./subscription-admin/subscription-admin.module\": [\n\t\t\"./src/app/subscription-admin/subscription-admin.module.ts\",\n\t\t\"subscription-admin-subscription-admin-module\"\n\t],\n\t\"./super-admin/super-admin.module\": [\n\t\t\"./src/app/super-admin/super-admin.module.ts\",\n\t\t\"super-admin-super-admin-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CommonLoginService } from './common-login/common-login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppAuthGuard implements CanActivate {\n\n  constructor(private loginService: CommonLoginService, private router: Router) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    // console.log('AppAuthGuard() - ' + state.url);\n\n    this.loginService.redirectUrl = state.url;\n    if (state.url === '/login') {\n      return !this.loginService.isUserLoggedin;\n    }\n\n    if (this.loginService.isUserLoggedin) {\n      return true;\n    } else {\n      const userId = localStorage.getItem('memberId');\n      if (userId === undefined || userId == null) {\n        this.router.navigate(['/login']);\n        return false;\n      }\n      if (+userId > 0) {\n        this.loginService.reloginByUserId(+userId).subscribe((data) => {\n          // console.log(data);\n          this.loginService.setUserDataToCacheAndLocal(data);\n          this.router.navigate([`${this.loginService.redirectUrl}`]);\n        }, (error) =>{\n          console.log(error);\n          this.router.navigate(['/xyz']);\n        });\n      }\n      return false;\n    }\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonLoginComponent } from './common-login/common-login.component';\nimport { PageNotfoundComponent } from './page-notfound/page-notfound.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { AppAuthGuard } from './app-auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: CommonLoginComponent,\n    canActivate: [AppAuthGuard]\n  },\n  {\n    path: 'subscription',\n    loadChildren: './subscription-admin/subscription-admin.module#SubscriptionAdminModule',\n    canActivate: [AppAuthGuard]\n  },\n  {\n    path: 'superadmin',\n    loadChildren: './super-admin/super-admin.module#SuperAdminModule',\n    canActivate: [AppAuthGuard]\n  },\n  {\n    path: 'resetpassword',\n    component: ResetPasswordComponent,\n    canActivate: [AppAuthGuard]\n  },\n  {\n    path: 'logout',\n    redirectTo: '/login',\n  },\n  {\n    path: '**',\n    component: PageNotfoundComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes,\n      {\n        useHash: true,\n      })\n  ],\n  declarations: [],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<ng-progress [direction]=\\\"'ltr+'\\\" [speed]=\\\"500\\\" [trickleSpeed]=\\\"100\\\" [spinner]=\\\"true\\\"\\r\\n    [spinnerPosition]=\\\"'right'\\\" [thick]=\\\"true\\\" [meteor]=\\\"true\\\" [color]=\\\"'#00ff40'\\\" [ease]=\\\"'linear'\\\"></ng-progress>\\r\\n<router-outlet></router-outlet>\\r\\n<lib-ngx-notification></lib-ngx-notification>\"","import { Component, OnInit } from '@angular/core';\nimport { CommonLoginService } from './common-login/common-login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private commonService: CommonLoginService) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbPaginationModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgProgressModule } from '@ngx-progressbar/core';\nimport { NgxNotificationComponent } from 'ngx-notification';\nimport { FormWizardModule } from 'angular2-wizard';\n\nimport { AppComponent } from './app.component';\nimport { CommonLoginComponent } from './common-login/common-login.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PageNotfoundComponent } from './page-notfound/page-notfound.component';\nimport { CommonLoginService } from './common-login/common-login.service';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CommonLoginComponent,\n    PageNotfoundComponent,\n    ResetPasswordComponent,\n    NgxNotificationComponent\n  ],\n  imports: [\n    NgbModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    NgProgressModule.forRoot(),\n    NgbPaginationModule,\n    NgbAlertModule,\n    FormWizardModule\n  ],\n  providers: [CommonLoginService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum UserTypes {\r\n    SuperAdministrator = 100,\r\n    Administrator,\r\n    SubAdminstrator,\r\n    GuestUser,\r\n    RegistredUser\r\n}","export enum UserPermission {\r\n    FULL_CUSTOMER = 100,\r\n    VIEW_CUSTOMER,\r\n    ADD_CUSTOMER,\r\n    DELETE_CUSTOMER,\r\n    EDIT_CUSTOMER,\r\n\r\n    VIEW_RESULT = 111,\r\n    DOWNLOAD_RESULT,\r\n\r\n    FULL_FEEDBACK = 120,\r\n    VIEW_FEEDBACK,\r\n    EDIT_FEEDBACK,\r\n    DELETE_FEEDBACK,\r\n    ADD_FEEDBACK,\r\n\r\n    FULL_POLL = 130,\r\n    VIEW_POLL,\r\n    EDIT_POLL,\r\n    DELETE_POLL,\r\n    ADD_POLL,\r\n\r\n    FULL_NOTICE = 140,\r\n    VIEW_NOTICE,\r\n    EDIT_NOTICE,\r\n    DELETE_NOTICE,\r\n    ADD_NOTICE,\r\n\r\n    FULL_PROFILE = 150,\r\n    VIEW_PROFILE,\r\n    EDIT_PROFILE,\r\n    DELETE_PROFILE,\r\n    ADD_PROFILE,\r\n\r\n    CUSTOMER_MANAGEMENT = 160,\r\n    SUBSCRIPTION_TOOL,\r\n    VIEW_DOWNLOAD_RESULT,\r\n    VIEW_EDIT_PROFILE,\r\n    ADMINISTRATOR,\r\n\r\n    FULL_ADMIN = 170,\r\n    VIEW_ADMIN,\r\n    EDIT_ADMIN,\r\n    DELETE_ADMIN,\r\n    ADD_ADMIN,\r\n}","module.exports = \".login-page-wrapper {\\r\\n  background-image: url('login-bg-1.jpg');\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n  background-position: center;\\r\\n  position: absolute;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n.login-logo {\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\\r\\n.login-form-wrapper {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.login-form-wrapper form {\\r\\n  padding: 30px 20px;\\r\\n  background-color: #fff;\\r\\n  border-radius: 10px;\\r\\n  display: inline-block;\\r\\n  opacity: 0.8;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.login-form-wrapper .input-icons {\\r\\n  display: inline-block;\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\\r\\n.login-form-wrapper .form-control {\\r\\n  display: inline-block;\\r\\n  width: 250px;\\r\\n  border: 0;\\r\\n  border-bottom: 1px solid #ccc;\\r\\n  box-shadow: none;\\r\\n  border-radius: 0;\\r\\n  padding-left: 0;\\r\\n}\\r\\n\\r\\n.login-form-wrapper .forgot-password {\\r\\n  float: right;\\r\\n  text-decoration: none;\\r\\n  font-size: smaller;\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n.login-form-wrapper .login-btn {\\r\\n  color: #fff;\\r\\n  background-color: #0085f0;\\r\\n  display: block;\\r\\n  text-align: center;\\r\\n  border-radius: 10px;\\r\\n  padding: 4px;\\r\\n  margin-top: 10px;\\r\\n  outline: none !important;\\r\\n}\\r\\n\\r\\n.login-form-wrapper .login-btn:hover,\\r\\n.login-form-wrapper .login-btn:focus {\\r\\n  opacity: 0.4;\\r\\n  outline: none !important;\\r\\n}\\r\\n\\r\\n.login-logo span {\\r\\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\\r\\n  font-weight: bold;\\r\\n  letter-spacing: 1px;\\r\\n}\\r\\n\\r\\n.login-form-submit {\\r\\n  margin: none;\\r\\n  width: 100%;\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n@media (min-width: 700px) {\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"login-page-wrapper\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"login-logo\\\">\\n      <img src=\\\"./assets/images/logo.png\\\" width=\\\"88\\\" alt=\\\"logo\\\">\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"login-form-wrapper\\\">\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginFormSubmit()\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n              <span class=\\\"input-icons\\\"><i class=\\\"fa fa-user\\\"></i></span>\\n              <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <span class=\\\"input-icons\\\"><i class=\\\"fa fa-lock\\\"></i></span>\\n              <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n            </div>\\n            <div class=\\\"forgot-password-wrap\\\">\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"login-btn-wrap\\\">\\n              <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"login-btn login-form-submit\\\">\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CommonLoginService } from './common-login.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoginModel } from '../common-models/login-model';\nimport { Router } from '@angular/router';\nimport { NgxNotificationService } from 'ngx-notification';\nimport { NgProgress } from '@ngx-progressbar/core';\n\n@Component({\n  selector: 'app-common-login',\n  templateUrl: './common-login.component.html',\n  styleUrls: ['./common-login.component.css']\n})\nexport class CommonLoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loginModel: LoginModel;\n  username: FormControl;\n  password: FormControl;\n\n  constructor(\n    private loginService: CommonLoginService,\n    private router: Router,\n    private progressBar: NgProgress,\n    private ngxNotificationService: NgxNotificationService\n  ) { }\n\n  ngOnInit() {\n    this.createFormControl();\n    this.createFormGroup();\n  }\n\n  sendNotification() {\n    this.ngxNotificationService.sendMessage('This is my message to you!', 'danger', 'top-right');\n  }\n\n  createFormGroup() {\n    this.loginForm = new FormGroup({\n      username: this.username,\n      password: this.password\n    });\n  }\n\n  createFormControl() {\n    this.username = new FormControl(\n      '',\n      [\n        Validators.required,\n        Validators.minLength(5)\n      ]\n    );\n    this.password = new FormControl(\n      '',\n      [\n        Validators.required,\n        Validators.minLength(5)\n      ]\n    );\n  }\n\n  loginFormSubmit() {\n    this.progressBar.start();\n    if (this.loginForm.valid) {\n      this.loginModel = new LoginModel();\n      this.loginModel.username = this.username.value;\n      this.loginModel.password = this.password.value;\n      this.loginService.loginUserName = this.username.value;\n      this.loginService.loginPassword = this.password.value;\n      this.loginService.userLogin(this.loginModel).subscribe((data) => {\n        if (data == null) {\n          return false;\n        }\n        if (+data.errorCode == 412) {\n          this.ngxNotificationService.sendMessage(`${data.developerMessage}!`, 'danger', 'top-right');\n        }\n        if (+data.errorCode == 400) {\n          this.ngxNotificationService.sendMessage('try again later!', 'danger', 'top-right');\n        }\n        if (data != null && data.memberId != undefined) {\n          console.log(data)\n          this.loginService.setUserDataToCacheAndLocal(data);\n          this.loginService.switchTheUrl(data);\n        }\n        this.progressBar.complete();\n        this.errorHandler();\n      },\n        (error) => {\n          this.ngxNotificationService.sendMessage('Server not responding!', 'danger', 'top-right');\n          this.progressBar.complete();\n        },\n        () => {\n          this.progressBar.complete();\n        }\n      );\n      //this.loginForm.reset();\n    } else {\n      this.ngxNotificationService.sendMessage('Enter a valid credentials!', 'danger', 'top-right');\n      this.progressBar.complete();\n    }\n  }\n\n  errorHandler() {\n    this.progressBar.complete();\n  }\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { LoginModel } from '../common-models/login-model';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { User } from '../common-models/user';\nimport { UserTypes } from '../common-enums/uesr-types';\nimport { Router } from '@angular/router';\nimport { UserPermission } from '../common-enums/user-permissions';\n\nconst ROOT_URL_ADMIN = '/tap/api/admin';\nconst ROOT_URL_ORGANIZATION = '/tap/api/admin/organization';\nconst ROOT_URL_ORGANIZATION_MEMBER = '/tap/api/admin/organization/member';\n\nconst header = new HttpHeaders({\n    'token': localStorage.getItem('userToken'),\n});\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommonLoginService implements OnInit {\n\n    userData: User;\n    memberId: number;\n    isUserLoggedin = false;\n    redirectUrl: string;\n    loginUserName: string;\n    loginPassword: string;\n    showTapNotification: boolean = false;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n    ) { }\n\n\n    ngOnInit() { }\n\n    userLogin(data: LoginModel): Observable<any> {\n        return this.http.post<any>(ROOT_URL_ADMIN + '/login', data).pipe(\n            catchError(error => {\n                return this.errorHandler(error);\n            })\n        );\n    }\n\n    // used to fetch user data after refresh window\n    reloginByUserId(userId: number): Observable<User> {\n        return this.http.get<User>(ROOT_URL_ORGANIZATION_MEMBER + '/' + userId);\n    }\n\n    resetPassword(data: any): Observable<any> {\n        return this.http.post(ROOT_URL_ADMIN + '/reset', data);\n    }\n\n    userLogout(data: LoginModel) {\n        this.http.post<User>(ROOT_URL_ADMIN + '/logout', data).subscribe(() => {\n            this.removeUserDataFromCacheAndLocal();\n        });\n    }\n\n    commonLogout() {\n        this.removeUserDataFromCacheAndLocal();\n    }\n\n    setUserDataToCacheAndLocal(user: User) {\n        this.userData = user;   // very important task\n        this.memberId = user.memberId;\n        this.isUserLoggedin = true;\n        localStorage.setItem('memberId', user.memberId.toString());\n    }\n\n    removeUserDataFromCacheAndLocal() {\n        this.userData = null;\n        this.memberId = null;\n        this.isUserLoggedin = false;\n        localStorage.removeItem('memberId');\n        this.router.navigate(['/login']);\n    }\n\n    switchTheUrl(user: User) {\n        switch (user.memberType) {\n            case UserTypes.SuperAdministrator:\n                this.router.navigate(['/superadmin']);\n                break;\n            case UserTypes.SubAdminstrator:\n            case UserTypes.Administrator:\n                if (user.showResetPassword) {\n                    this.router.navigate(['/resetpassword']);\n                } else {\n                    this.router.navigate(['/subscription']);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    checkUserPermission(permission: UserPermission): boolean {\n        if (this.userData) {\n            return this.userData.userPermissions.some(vendor => vendor['securityPermissionId'] === permission);\n        }\n        return false;\n    }\n\n    checkUserPermissionByUser(user: User, permission: UserPermission): boolean {\n        if (user) {\n            return user.userPermissions.some(vendor => vendor['securityPermissionId'] === permission);\n        }\n        return false;\n    }\n\n    errorHandler(error: HttpErrorResponse) {\n        return Observable.throw(error.message);\n    }\n\n    createCustomerAccess(): boolean {\n        if (this.checkUserPermission(UserPermission.ADD_CUSTOMER)) {\n            return true;\n        }\n        return false;\n    }\n\n    createFeedbackAccess(): boolean {\n        if (this.userData.memberType != UserTypes.Administrator) {\n            if (this.checkUserPermission(UserPermission.ADD_FEEDBACK)) {\n                return true;\n            }\n            return false;\n        }\n        return false;\n    }\n\n    createPollAccess(): boolean {\n        if (this.userData.memberType != UserTypes.Administrator) {\n            if (this.checkUserPermission(UserPermission.ADD_POLL)) {\n                return true;\n            }\n            return false;\n        }\n        return false;\n    }\n\n    createNoticeAccess(): boolean {\n        if (this.userData.memberType != UserTypes.Administrator) {\n            if (this.checkUserPermission(UserPermission.ADD_NOTICE\n            )) {\n                return true;\n            }\n            return false;\n        }\n        return false;\n    }\n\n    deleteCustomerAccess(): boolean {\n        if (this.checkUserPermission(UserPermission.ADD_CUSTOMER)) {\n            return true;\n        }\n        return false;\n    }\n\n    deleteFeedbackAccess(): boolean {\n        if (this.checkUserPermission(UserPermission.DELETE_FEEDBACK)) {\n            return true;\n        }\n        return false;\n    }\n\n    deleteNoticeAccess(): boolean {\n        if (this.checkUserPermission(UserPermission.DELETE_NOTICE)) {\n            return true;\n        }\n        return false;\n    }\n\n    deletePollAccess(): boolean {\n        if (this.checkUserPermission(UserPermission.DELETE_POLL)) {\n            return true;\n        }\n        return false;\n    }\n\n    addCustomerAccess(): boolean {\n        if (this.checkUserPermission(UserPermission.ADD_CUSTOMER) || UserTypes.Administrator) {\n            return true;\n        }\n        return false;\n    }\n\n    removeCustomerAccess(): boolean {\n        if (this.checkUserPermission(UserPermission.DELETE_CUSTOMER) || UserTypes.Administrator) {\n            return true;\n        }\n        return false;\n    }\n\n\n}\n","export class LoginModel {\r\n    username: string;\r\n    password: string;\r\n}","module.exports = \".page-not-found-container{\\r\\n    width: 100%;\\r\\n    height: 100Vh;\\r\\n    background: rgba(13, 147, 249, 1);\\r\\n    background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(13, 147, 249, 1)), color-stop(99%, rgba(66, 74, 221, 1)), color-stop(100%, rgba(69, 69, 220, 1)));\\r\\n    background: linear-gradient(to bottom, rgba(13, 147, 249, 1) 0%, rgba(66, 74, 221, 1) 99%, rgba(69, 69, 220, 1) 100%);\\r\\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#0d93f9', endColorstr='#4545dc', GradientType=0);\\r\\n}\\r\\n\\r\\n.error-code{\\r\\n    margin: 0 20px 0 20px;\\r\\n    color: white;\\r\\n    font-weight: 700;\\r\\n    font-size: 20rem;\\r\\n}\\r\\n\\r\\n.error-message{\\r\\n    margin: 0 20px 0 20px;\\r\\n    color: white;\\r\\n    font-weight: 400;\\r\\n    font-size: 5rem;\\r\\n}\"","module.exports = \"<div class=\\\"page-not-found-container\\\">\\n  <span class=\\\"error-code\\\">{{errorCode}}</span>\\n  <span class=\\\"error-message\\\">{{errorMessage}}</span>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-notfound',\n  templateUrl: './page-notfound.component.html',\n  styleUrls: ['./page-notfound.component.css']\n})\nexport class PageNotfoundComponent implements OnInit {\n\n  errorCode: string = '404'\n  errorMessage: string = 'page not found'\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  setPNF(code: string, message: string) {\n    this.errorCode = code;\n    this.errorMessage = message;\n  }\n\n}\n","module.exports = \".reset-page-wrapper {\\r\\n    background-color: #f9fdff;\\r\\n    padding-top: 80px;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .reset-content h1 {\\r\\n    color: #1488f5;\\r\\n  }\\r\\n  \\r\\n  .reset-content form {\\r\\n    width: 290px;\\r\\n    margin: 0px auto;\\r\\n  }\\r\\n  \\r\\n  .login-form-wrapper form {\\r\\n    padding: 30px 20px;\\r\\n    background-color: #fff;\\r\\n    border-radius: 10px;\\r\\n    display: inline-block;\\r\\n    opacity: 0.8;\\r\\n    margin-top: 100px;\\r\\n  }\\r\\n  \\r\\n  .reset-content .input-icons {\\r\\n    display: inline-block;\\r\\n    margin-right: 5px;\\r\\n  }\\r\\n  \\r\\n  .reset-content .form-control {\\r\\n    display: inline-block;\\r\\n    width: 270px;\\r\\n    border: 0;\\r\\n    border-bottom: 1px solid #ccc;\\r\\n    box-shadow: none;\\r\\n    border-radius: 0;\\r\\n    padding-left: 0;\\r\\n    text-transform: capitalize;\\r\\n    background-color: transparent;\\r\\n  }\\r\\n  \\r\\n  .reset-content .reset-btn {\\r\\n    color: #fff;\\r\\n    background-color: #0085f0;\\r\\n    display: block;\\r\\n    text-align: center;\\r\\n    border-radius: 10px;\\r\\n    text-transform: capitalize;\\r\\n    padding: 7px 4px;\\r\\n    margin-top: 30px;\\r\\n    width: 100%;\\r\\n    border: 0;\\r\\n  }\\r\\n  \\r\\n  .reset-content .rest-btn:hover,\\r\\n  .reset-content .rest-btn:focus {\\r\\n    opacity: 0.8;\\r\\n  }\\r\\n  \\r\\n  .resetpassword-title-panel{\\r\\n    height: 150px;\\r\\n  }\"","module.exports = \"<div class=\\\"reset-page-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"reset-logo\\\">\\n      <img src=\\\"assets/images/logo.png\\\" width=\\\"140\\\" alt=\\\"logo\\\">\\n    </div>\\n    <div class=\\\"reset-content\\\">\\n      <div class=\\\"resetpassword-title-panel\\\">\\n        <h1>Welcome!!</h1>\\n        <p>Before you are going to access the subscription portal,<br>Please reset your password</p>\\n        <p>{{errorMessage}}</p>\\n      </div>\\n      <div>\\n        <form [formGroup]=\\\"passwordConfirmForm\\\" (ngSubmit)=\\\"resetPasswordSubmit()\\\" novalidate>\\n          <div class=\\\"form-group\\\">\\n            <span class=\\\"input-icons\\\"><i class=\\\"fa fa-lock\\\"></i></span>\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter new password\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <span class=\\\"input-icons\\\"><i class=\\\"fa fa-lock\\\"></i></span>\\n            <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" placeholder=\\\"re-enter new password\\\">\\n          </div>\\n          <div class=\\\"login-btn-wrap\\\">\\n            <!-- <a href=\\\"#\\\" type=\\\"submit\\\" class=\\\"reset-btn\\\">Reset</a> -->\\n            <input type=\\\"submit\\\" value=\\\"Reset\\\" class=\\\"reset-btn\\\">\\n            <div class=\\\"clearfix\\\"></div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CommonLoginService } from '../common-login/common-login.service';\nimport { NgProgress } from '@ngx-progressbar/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  password: FormControl;\n  confirmPassword: FormControl;\n  passwordConfirmForm: FormGroup;\n  errorMessage: string;\n\n  constructor(\n    private router: Router,\n    private commeonService: CommonLoginService,\n    private progressBar: NgProgress\n  ) { }\n\n  ngOnInit() {\n    this.createFormControl();\n    this.createFromGroup();\n  }\n\n  createFormControl() {\n    this.password = new FormControl('',\n      [\n        Validators.required,\n        Validators.minLength(5)\n      ]);\n    this.confirmPassword = new FormControl();\n  }\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    let pass = group.controls.password.value;\n    let confirmPass = group.controls.confirmPass.value;\n    return pass === confirmPass ? null : { notSame: true }\n  }\n\n  createFromGroup() {\n    this.passwordConfirmForm = new FormGroup({\n      password: this.password,\n      confirmPassword: this.confirmPassword\n    });\n  }\n\n  resetPasswordSubmit() {\n    setTimeout(() => {\n      this.errorMessage = '';\n    }, 5000);\n\n    if (!this.password.valid) {\n      this.errorMessage = 'Enter a valid Password!'\n      return false;\n    }\n    if (!this.confirmPassword.valid) {\n      this.errorMessage = 'Enter a valid Password Again!'\n      return false;\n    }\n    if (this.password.value != this.confirmPassword.value) {\n      this.errorMessage = 'Password not Match!';\n      return false;\n    }\n    this.progressBar.start();\n    if (this.passwordConfirmForm.valid) {\n      let resetModel = {\n        username: this.commeonService.loginUserName,\n        password: this.commeonService.loginPassword,\n        newpassword: this.password.value\n      }\n      this.progressBar.set(80);\n      this.commeonService.resetPassword(resetModel).subscribe((data) => {\n        if (data.errorCode) {\n          this.errorMessage = data.developerMessage;\n        } else {\n          this.commeonService.loginPassword = null;\n          this.router.navigate(['/subscription']);\n          this.progressBar.complete();\n        }\n      });\n    }\n    this.progressBar.complete();\n  }\n  passwordResetSubmit() {\n    this.router.navigate(['/subscription']);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}
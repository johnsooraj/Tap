{"version":3,"sources":["webpack:///./node_modules/angular-datatables/index.js","webpack:///./node_modules/angular-datatables/src/angular-datatables.directive.js","webpack:///./node_modules/angular-datatables/src/angular-datatables.module.js","webpack:///./src/app/common-models/organization.ts","webpack:///./src/app/super-admin/admin-home-content/admin-home-content.component.css","webpack:///./src/app/super-admin/admin-home-content/admin-home-content.component.html","webpack:///./src/app/super-admin/admin-home-content/admin-home-content.component.ts","webpack:///./src/app/super-admin/admin-home/admin-home.component.css","webpack:///./src/app/super-admin/admin-home/admin-home.component.html","webpack:///./src/app/super-admin/admin-home/admin-home.component.ts","webpack:///./src/app/super-admin/edit-organization/edit-organization.component.css","webpack:///./src/app/super-admin/edit-organization/edit-organization.component.html","webpack:///./src/app/super-admin/edit-organization/edit-organization.component.ts","webpack:///./src/app/super-admin/organization/organization.component.css","webpack:///./src/app/super-admin/organization/organization.component.html","webpack:///./src/app/super-admin/organization/organization.component.ts","webpack:///./src/app/super-admin/pagenot-found/pagenot-found.component.css","webpack:///./src/app/super-admin/pagenot-found/pagenot-found.component.html","webpack:///./src/app/super-admin/pagenot-found/pagenot-found.component.ts","webpack:///./src/app/super-admin/sidebar/sidebar.component.css","webpack:///./src/app/super-admin/sidebar/sidebar.component.html","webpack:///./src/app/super-admin/sidebar/sidebar.component.ts","webpack:///./src/app/super-admin/super-admin-routing.module.ts","webpack:///./src/app/super-admin/super-admin.module.ts","webpack:///./src/app/super-admin/super-admin.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACwE;AACL;AACnE,iC;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAC6D;AAC9B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,wDAAU,GAAG;AAC7B,MAAM;AACN;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,uBAAuB,OAAO,mDAAK,EAAE;AACrC;AACA;AACA,CAAC;AAC6B;AAC9B,wD;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACyC;AACM;AACqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C,mCAAmC,gFAAkB;AACrD,8BAA8B,gFAAkB;AAChD,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AAC2B;AAC5B,qD;;;;;;;;;;;;ACtBA;AAAA;AAAA;IAAA;IAmBA,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;ACxBD,uCAAuC,uBAAuB,oBAAoB,0BAA0B,KAAK,yBAAyB,oBAAoB,sBAAsB,+BAA+B,KAAK,sBAAsB,sBAAsB,kCAAkC,2BAA2B,KAAK,0BAA0B,yBAAyB,KAAK,C;;;;;;;;;;;ACA9X,sNAAsN,UAAU,2H;;;;;;;;;;;;;;;;;;;;;;;;;ACA/J;AACY;AAO7E;IAIE,mCAAoB,aAAiC;QAAjC,kBAAa,GAAb,aAAa,CAAoB;QAFrD,aAAQ,GAAW,EAAE,CAAC;QAGpB,IAAI,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI;YACvG,IAAI,CAAC,QAAQ,GAAG,GAAG;;YAEnB,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ;IACxG,CAAC;IAED,4CAAQ,GAAR;IACA,CAAC;IAZU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;;SAGnC,CAAC;yCAKmC,qFAAkB;OAJ1C,yBAAyB,CAarC;IAAD,gCAAC;CAAA;AAbqC;;;;;;;;;;;;ACRtC,6BAA6B,sBAAsB,KAAK,C;;;;;;;;;;;ACAxD,+J;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,qCAAqC,sBAAsB,KAAK,2BAA2B,2BAA2B,KAAK,+BAA+B,sBAAsB,KAAK,+BAA+B,sBAAsB,KAAK,+BAA+B,oBAAoB,uCAAuC,sBAAsB,KAAK,kCAAkC,uBAAuB,wBAAwB,KAAK,+BAA+B,oBAAoB,2BAA2B,sBAAsB,sCAAsC,OAAO,+BAA+B,sBAAsB,2BAA2B,sBAAsB,OAAO,oCAAoC,8BAA8B,wBAAwB,OAAO,C;;;;;;;;;;;ACAzxB,yKAAyK,8BAA8B,0GAA0G,gCAAgC,uFAAuF,oCAAoC,klBAAklB,+CAA+C,0IAA0I,sDAAsD,yJAAyJ,mDAAmD,4JAA4J,qDAAqD,+RAA+R,kCAAkC,wqBAAwqB,8GAA8G,qBAAqB,+0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7sF;AAC9B;AACM;AACU;AACK;AACV;AAIM;AACT;AACO;AAO1D;IAOE,mCACU,KAAqB,EACrB,YAA+B,EAC/B,QAAkB,EAClB,YAAsB,EACtB,WAAuB,EACvB,MAA8B;QAL9B,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAmB;QAC/B,aAAQ,GAAR,QAAQ,CAAU;QAClB,iBAAY,GAAZ,YAAY,CAAU;QACtB,gBAAW,GAAX,WAAW,CAAY;QACvB,WAAM,GAAN,MAAM,CAAwB;QAVxC,oBAAe,GAAW,+BAA+B,CAAC;QAC1D,yBAAoB,GAAW,iCAAiC,CAAC;QACjE,sBAAiB,GAAiB,IAAI,wEAAY,EAAE,CAAC;QAUnD,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC;QACzD,IAAI,CAAC,iBAAiB,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAChE,IAAI,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,4CAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,yEAAS,CAAC,aAAa,CAAC;IACtC,CAAC;IAED,wDAAoB,GAApB,UAAqB,EAAE;QAAvB,iBAUC;QATC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACvD,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;gBAC3B,IAAI,CAAC,UAAU,GAAG,KAAI,CAAC,eAAe,CAAC;aACxC;YACD,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;gBAC7B,IAAI,CAAC,YAAY,GAAG,KAAI,CAAC,oBAAoB,CAAC;aAC/C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAAuB,GAAvB;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1E,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACzB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,KAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAED,gDAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,mDAAe,GAAf;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACnE,CAAC;IAED,sDAAkB,GAAlB,UAAmB,EAAU;QAA7B,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;YACrD,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,gCAAgC,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;aACnF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAsB,GAAtB,UAAuB,OAAO,EAAE,EAAE;QAAlC,iBAUC;QATC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YACpB,IAAI,MAAM,IAAI,QAAQ,EAAE;gBACtB,KAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;aAC7B;QACH,CAAC,EAAE,UAAC,MAAM;YACR,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAxEmC;QAAnC,+DAAS,CAAC,uBAAuB,CAAC;kCAAwB,wDAAU;4EAAC;IAF3D,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCASiB,8DAAc;YACP,sEAAiB;YACrB,wDAAQ;YACJ,mEAAQ;YACT,gEAAU;YACf,uEAAsB;OAb7B,yBAAyB,CA2ErC;IAAD,gCAAC;CAAA;AA3EqC;;;;;;;;;;;;AClBtC,8CAA8C,iCAAiC,qBAAqB,2BAA2B,yBAAyB,2BAA2B,2BAA2B,wCAAwC,KAAK,wBAAwB,2BAA2B,wCAAwC,KAAK,2BAA2B,wBAAwB,KAAK,8BAA8B,mBAAmB,2BAA2B,0BAA0B,kCAAkC,4BAA4B,KAAK,C;;;;;;;;;;;ACA5jB,ynDAAynD,6nBAA6nB,uBAAuB,2CAA2C,oBAAoB,uCAAuC,YAAY,uCAAuC,qCAAqC,87CAA87C,yZAAyZ,qBAAqB,6SAA6S,GAAG,qFAAqF,uBAAuB,+CAA+C,oBAAoB,2CAA2C,YAAY,2CAA2C,qCAAqC,ylBAAylB,+eAA+e,+HAA+H,+gBAA+gB,iJAAiJ,sgBAAsgB,iIAAiI,gxEAAgxE,osB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAllT;AACL;AAC3B;AACa;AACH;AACE;AACW;AACL;AACD;AAQ1D;IAgBE,+BACU,iBAAoC,EACpC,YAAsB,EACtB,WAAuB,EACvB,MAAc,EACd,WAAyB,EACzB,MAA8B;QAL9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iBAAY,GAAZ,YAAY,CAAU;QACtB,gBAAW,GAAX,WAAW,CAAY;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAwB;QAlBxC,qBAAgB,GAAG,KAAK,EAAgB,CAAC;IAoBzC,CAAC;IAED,0BAA0B;IAC1B,wCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YACzD,IAAI,IAAI,IAAI,IAAI,EAAE;gBAChB,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,4BAA4B,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;aAC9E;iBAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAG,IAAI,UAAG,CAAC,cAAc,GAAG,KAAK,EAA1B,CAA0B,CAAC,CAAC;aAClE;iBAAM;aAEN;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,0CAAU,GAAV,UAAW,OAAO;QAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,cAAc,EAAE,mBAAmB;YACnC,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACrB,CAAC,EAAE,UAAC,MAAM;YACR,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAe,GAAf;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YAC1C,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YAC3C,yDAAU,CAAC,QAAQ;SACpB,CAAC,CAAC;QACH,IAAI,CAAC,yBAAyB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACnD,yDAAU,CAAC,QAAQ;SACpB,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7C,IAAI,CAAC,sBAAsB,GAAG,IAAI,0DAAW,EAAE,CAAC;QAChD,IAAI,CAAC,oBAAoB,GAAG,IAAI,0DAAW,EAAE,CAAC;IAChD,CAAC;IAED,4CAAY,GAAZ;QACE,IAAI,CAAC,mBAAmB,GAAG,IAAI,wDAAS,CAAC;YACvC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;YAC7C,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YACnD,yBAAyB,EAAE,IAAI,CAAC,yBAAyB;SAC1D,CAAC,CAAC;IACL,CAAC;IAED,0DAA0B,GAA1B,UAA2B,GAAG;QAC5B,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7B,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpD,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;IAED,mDAAmB,GAAnB,UAAoB,SAAS;QAC3B,IAAI,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;QAC3C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IAClD,CAAC;IAED,wDAAwB,GAAxB,UAAyB,GAAG;QAC1B,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7B,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrD,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;IAED,oDAAoB,GAApB,UAAqB,SAAS;QAC5B,IAAI,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;QAC3C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IAClD,CAAC;IAID,iDAAiB,GAAjB,UAAkB,GAAG,EAAE,IAAY;QACjC,IAAI,IAAI,IAAI,KAAK,EAAE;YACjB,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;iBAAM;gBACL,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;SACF;IACH,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAG,IAAI,QAAC,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,EAA3B,CAA2B,CAAC,CAAC;IACpE,CAAC;IAED,6CAAa,GAAb;QACE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAG,IAAI,QAAC,GAAG,CAAC,cAAc,GAAG,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAAC;IACrE,CAAC;IAED,gDAAgB,GAAhB;QAAA,iBAoBC;QAnBC,IAAI,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE;YAClC,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;gBAC/D,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAI,MAAM,GAAG,IAAI,wEAAY,EAAE,CAAC;gBAChC,oBAAoB;gBACpB,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;gBACtD,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;gBAC5C,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC;gBACvD,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBACnD,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;gBAC5D,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;oBAC7D,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC;oBACnC,KAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC5B,KAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;gBACnC,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;aAChC;SACF;IACH,CAAC;IAED,iDAAiB,GAAjB;QAAA,iBAyBC;QAxBC,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAG;YAC/B,IAAI,GAAG,CAAC,cAAc,EAAE;gBACtB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACzE,IAAI,KAAK,EAAE;gBACT,IAAI,WAAS,GAAG,KAAK,EAAgB,CAAC;gBACtC,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAG;oBAC/B,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE;wBACvB,WAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACrB;gBACH,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,WAAS,CAAC,OAAO,CAAC,aAAG;oBACnB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,8BAA8B,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;aACjF;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,6BAA6B,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;aAC/E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAsB,GAAtB;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAChE,IAAI,MAAM,KAAK,QAAQ,EAAE;gBACvB,KAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;QACH,CAAC,EAAE,UAAC,MAAM;YACR,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAkB,GAAlB;QACE,OAAO,IAAI,CAAC;IACd,CAAC;IAED,oDAAoB,GAApB,UAAqB,IAAkB;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAC1E,CAAC;IAlMsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAoB,wDAAU;oEAAC;IAF1C,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAkB6B,sEAAiB;YACtB,mEAAQ;YACT,gEAAU;YACf,sDAAM;YACD,kEAAY;YACjB,uEAAsB;OAtB7B,qBAAqB,CAsMjC;IAAD,4BAAC;CAAA;AAtMiC;;;;;;;;;;;;AChBlC,mB;;;;;;;;;;;ACAA,sD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,mB;;;;;;;;;;;ACAA,2R;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC2B;AAO7E;IAEE,0BAAoB,aAAiC;QAAjC,kBAAa,GAAb,aAAa,CAAoB;IAAI,CAAC;IAE1D,mCAAQ,GAAR;IACA,CAAC;IAED,iCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,+BAA+B,EAAE,CAAC;IACvD,CAAC;IATU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAGmC,qFAAkB;OAF1C,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRY;AACc;AACgB;AACS;AACF;AACc;AAE5F,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mFAAkB;QAC7B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAC,EAAE;gBACP,UAAU,EAAC,cAAc;gBACzB,SAAS,EAAC,MAAM;aACjB;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,0FAAqB;aACjC;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,SAAS,EAAE,wGAAyB;aACrC;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,SAAS,EAAE,4FAAqB;aACjC;SACF;KACF;CACF,CAAC;AAMF;IAAA;IAAuC,CAAC;IAA3B,uBAAuB;QAJnC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,uBAAuB,CAAI;IAAD,8BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCK;AACM;AACO;AACY;AAEK;AACA;AACR;AACiB;AACF;AACgB;AACpC;AACkC;AAsB5F;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QApB5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,mFAAuB;gBACvB,mEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;aACpB;YACD,YAAY,EAAE;gBACZ,mFAAkB;gBAClB,2EAAgB;gBAChB,4FAAqB;gBACrB,0FAAqB;gBACrB,0GAAyB;gBACzB,yGAAyB;aAC1B;YACD,SAAS,EAAE;gBACT,uEAAiB;aAClB;SACF,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AClCc;AACO;AAMlD,IAAM,qBAAqB,GAAG,6BAA6B,CAAC;AAC5D,IAAM,eAAe,GAAG,sBAAsB,CAAC;AAC/C,IAAM,uBAAuB,GAAG,4BAA4B,CAAC;AAC7D,IAAM,wBAAwB,GAAG,6BAA6B,CAAC;AAK/D;IAEE,2BACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEL,8CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,qBAAqB,CAAC,CAAC;IAC5D,CAAC;IAED,+CAAmB,GAAnB,UAAoB,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,qBAAqB,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,4CAAgB,GAAhB,UAAiB,GAAiB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,qBAAqB,EAAE,GAAG,CAAC,CAAC;IAClE,CAAC;IAED,8CAAkB,GAAlB,UAAmB,GAAiB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,qBAAqB,EAAE,GAAG,CAAC,CAAC;IACjE,CAAC;IAED,8CAAkB,GAAlB,UAAmB,EAAU;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,wCAAsC,EAAI,EAAE,IAAI,CAAC,CAAC;IAC9E,CAAC;IAED,oDAAwB,GAAxB,UAAyB,EAAU;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,sDAA0B,GAA1B,UAA2B,GAAQ;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,GAAG,SAAS,EAAE,GAAG,CAAC,CAAC;IAChE,CAAC;IAED,0CAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,eAAe,CAAC,CAAC;IACvD,CAAC;IAED,qDAAyB,GAAzB,UAA0B,IAAY;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,uBAAuB,GAAG,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,uDAA2B,GAA3B,UAA4B,KAAa;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,wBAAwB,GAAG,KAAK,CAAC,CAAC;IACtE,CAAC;IA5CU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;OAHf,iBAAiB,CA6C7B;IAAD,wBAAC;CAAA;AA7C6B","file":"super-admin-super-admin-module.js","sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n//# sourceMappingURL=index.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n           * The DataTable option you pass to configure your table.\n           */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    _this.dt = $(_this.el.nativeElement).DataTable(dtOptions);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[datatable]'\n                },] },\n    ];\n    /** @nocollapse */\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n    ]; };\n    DataTableDirective.propDecorators = {\n        \"dtOptions\": [{ type: Input },],\n        \"dtTrigger\": [{ type: Input },],\n    };\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n//# sourceMappingURL=angular-datatables.directive.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [DataTableDirective],\n                    exports: [DataTableDirective]\n                },] },\n    ];\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n//# sourceMappingURL=angular-datatables.module.js.map","import { User } from \"./user\";\r\nimport { Address } from \"./address\";\r\nimport { FeedbackObject } from \"./feedback\";\r\nimport { FeedbackGroupObject } from \"./feedback-group\";\r\n\r\nexport class Organization {\r\n    organizationId: number;\r\n    organizationName: string;\r\n    coverPhoto: string;\r\n    profilePhoto: string;\r\n    email: string;\r\n    timestamp: string;\r\n    createDateTime: string;\r\n    organizationAddress: Address;\r\n    members: User[];\r\n    coverPhotoByte: any;\r\n    profilePhotoByte: any;\r\n    authorityName: string;\r\n    notices: any[];\r\n    polls: any[];\r\n    feedbacks: FeedbackObject[];\r\n    feedbackGroups: FeedbackGroupObject[];\r\n\r\n    checkboxStatus: boolean;\r\n}","module.exports = \".super-admin-content{\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    padding-top: 20px;\\r\\n}\\r\\n.super-admin-content{\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n    background-color: #fff;\\r\\n}\\r\\n.loggedInUserName{\\r\\n    display: flex;\\r\\n    justify-content: flex-end;\\r\\n    margin-right: 20px;\\r\\n}\\r\\n.loggedInUserName > p{\\r\\n    margin-left: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"super-admin-content\\\">\\n    <div class=\\\"logo loggedInUserName\\\">\\n      <span><i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n      </span>\\n      <p>{{userName}}</p>\\n    </div>\\n    <div class=\\\"customer-cotrol\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { CommonLoginService } from '../../common-login/common-login.service';\n\n@Component({\n  selector: 'app-admin-home-content',\n  templateUrl: './admin-home-content.component.html',\n  styleUrls: ['./admin-home-content.component.css']\n})\nexport class AdminHomeContentComponent implements OnInit {\n\n  userName: string = '';\n\n  constructor(private commonService: CommonLoginService) {\n    if (commonService.userData.userData.firstName == null && commonService.userData.userData.lastName == null)\n      this.userName = '-'\n    else\n      this.userName = commonService.userData.userData.firstName + commonService.userData.userData.lastName\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \".main-page{\\r\\n    height: 100vh;\\r\\n}\"","module.exports = \"<div class=\\\"main-page add-new-admin-page\\\">\\n    <app-sidebar></app-sidebar>\\n    <app-admin-home-content></app-admin-home-content>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".addAdminModalBody{\\r\\n    height: 400px;\\r\\n}\\r\\n\\r\\n.addAdminModalBody{\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.addAdminModalBody ul {\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.addAdminModalBody li {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.modal-footer-addAdmin{\\r\\n    width: 100%;\\r\\n    justify-content: space-between;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.modal-footer-addAdmin a {\\r\\n    color: #2b48ec;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.modal-button-wrapper {\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    display: flex;\\r\\n    justify-content: space-evenly;\\r\\n  }\\r\\n\\r\\n.confirmation-message {\\r\\n    height: 100px;\\r\\n    text-align: center;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n.confirmation-message span {\\r\\n    word-wrap: break-word;\\r\\n    font-size: 20px;\\r\\n  }\"","module.exports = \"<div class=\\\"profile-container\\\">\\n  <div class=\\\"profile-wraper\\\">\\n    <div class=\\\"profile-cover\\\">\\n      <img class=\\\"profile-cover-img\\\" src=\\\"{{oragnizationModel.coverPhoto}}\\\">\\n    </div>\\n    <div class=\\\"profile-picture\\\">\\n      <img class=\\\"profile-profilepic-img\\\" src=\\\"{{oragnizationModel.profilePhoto}}\\\">\\n    </div>\\n    <div class=\\\"profile-body\\\">\\n      <h3 class=\\\"profile-title\\\">{{oragnizationModel.organizationName}}</h3>\\n      <div class=\\\"profile-edit-panel\\\">\\n        <button (click)=\\\"openResetpasswordModal(updatecontent, oragnizationModel.organizationId)\\\" type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\">Reset\\n          Organization Admin\\n          Password</button>\\n      </div>\\n      <div class=\\\"profile-body-wrapper\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"profile-details\\\">\\n              <dl class=\\\"row\\\">\\n                <dt class=\\\"col-sm-3\\\">Website</dt>\\n                <dd class=\\\"col-sm-9\\\" *ngIf=\\\"checkForAddress()\\\">{{oragnizationModel.organizationAddress.website}}</dd>\\n\\n                <dt class=\\\"col-sm-3\\\">Contact Number</dt>\\n                <dd class=\\\"col-sm-9\\\" *ngIf=\\\"checkForAddress()\\\">{{oragnizationModel.organizationAddress.contact_number}}\\n                </dd>\\n\\n                <dt class=\\\"col-sm-3\\\">Description</dt>\\n                <dd class=\\\"col-sm-9\\\" *ngIf=\\\"checkForAddress()\\\">{{oragnizationModel.organizationAddress.description}}\\n                </dd>\\n\\n                <dt class=\\\"col-sm-3\\\">Authority Name</dt>\\n                <dd class=\\\"col-sm-9\\\" *ngIf=\\\"checkForAddress()\\\">{{oragnizationModel.organizationAddress.authorityName}}\\n                </dd>\\n\\n                <dt class=\\\"col-sm-3\\\">Members</dt>\\n                <dd class=\\\"col-sm-9\\\">\\n                  <dl class=\\\"row\\\">\\n                    <dt class=\\\"col-sm-4\\\">Total</dt>\\n                    <dd class=\\\"col-sm-8\\\" *ngIf=\\\"checkForAddress()\\\">{{oragnizationModel.members.length}}.</dd>\\n                  </dl>\\n                  <dl class=\\\"row\\\">\\n                    <dt class=\\\"col-sm-4\\\">Administrator</dt>\\n                    <dd class=\\\"col-sm-8\\\" *ngIf=\\\"checkForAddress()\\\">1.</dd>\\n                  </dl>\\n                </dd>\\n              </dl>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"profile-details\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                  <ul class=\\\"list-group\\\">\\n                    <li *ngFor=\\\"let user of oragnizationModel.members\\\" class=\\\"list-group-item\\\">\\n                      <div *ngIf=\\\"user.userData != null; then content else other_content\\\">here is ignored</div>\\n                      <ng-template #content>User ({{user.userData.email}})</ng-template>\\n                      <ng-template #other_content>Administrator</ng-template>\\n                    </li>\\n                  </ul>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #updatecontent let-modal>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"confirmation-message\\\">\\n      <span>Password will be replaced.<br>Do You Wish to Proceed?</span>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <div class=\\\"modal-button-wrapper\\\">\\n      <button type=\\\"button\\\" class=\\\"btn customer-category-btn\\\" (click)=\\\"modal.close('cancel')\\\">Cancel</button>\\n      <button type=\\\"button\\\" class=\\\"btn customer-category-btn\\\" (click)=\\\"modal.close('update')\\\">Update</button>\\n    </div>\\n  </div>\\n</ng-template>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { SuperAdminService } from '../super-admin.service';\nimport { Organization } from '../../common-models/organization';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { OrganizationComponent } from '../organization/organization.component';\nimport { UserDetails } from 'src/app/common-models/user-details';\nimport { User } from 'src/app/common-models/user';\nimport { UserTypes } from 'src/app/common-enums/uesr-types';\nimport { NgProgress } from '@ngx-progressbar/core';\nimport { NgxNotificationService } from 'ngx-notification';\n\n@Component({\n  selector: 'app-edit-organization',\n  templateUrl: './edit-organization.component.html',\n  styleUrls: ['./edit-organization.component.css']\n})\nexport class EditOrganizationComponent implements OnInit {\n\n  @ViewChild('addAdminModalTemplate') addAdminModalTemplate: ElementRef;\n  defaultCoverURL: string = \"./assets/images/cover-pic.png\";\n  defaultProfilePicURL: string = \"./assets/images/profile-pic.png\";\n  oragnizationModel: Organization = new Organization();\n  userEnums: UserTypes;\n  constructor(\n    private route: ActivatedRoute,\n    private adminService: SuperAdminService,\n    private location: Location,\n    private modalService: NgbModal,\n    private progressBar: NgProgress,\n    private toster: NgxNotificationService\n  ) {\n    this.oragnizationModel.coverPhoto = this.defaultCoverURL;\n    this.oragnizationModel.profilePhoto = this.defaultProfilePicURL;\n    let id = parseInt(this.route.snapshot.paramMap.get('id'));\n    this.loadOrganizationById(id);\n  }\n\n  ngOnInit() {\n    console.log(UserTypes.Administrator)\n  }\n\n  loadOrganizationById(id) {\n    this.adminService.getOrganizationById(id).subscribe((data) => {\n      this.oragnizationModel = data;\n      if (data.coverPhoto == null) {\n        data.coverPhoto = this.defaultCoverURL;\n      }\n      if (data.profilePhoto == null) {\n        data.profilePhoto = this.defaultProfilePicURL;\n      }\n    });\n  }\n\n  updateOrganizationModel() {\n    this.progressBar.start();\n    this.oragnizationModel.members.splice(0, 1);\n    this.adminService.updateOrganization(this.oragnizationModel).subscribe((data) => {\n      this.progressBar.set(.8);\n      this.oragnizationModel = data;\n      this.progressBar.complete();\n    });\n    this.progressBar.complete();\n  }\n\n  gotoLastPage() {\n    this.location.back();\n  }\n\n  checkForAddress(): boolean {\n    return this.oragnizationModel.organizationAddress ? true : false;\n  }\n\n  resetAdminPassword(id: number) {\n    this.adminService.resetAdminPassword(id).subscribe((res) => {\n      if (res) {\n        this.toster.sendMessage(`Password Updated Successfully!`, 'success', 'top-right');\n      }\n    });\n  }\n\n  openResetpasswordModal(content, id) {\n    this.modalService.open(content, {\n      centered: true\n    }).result.then((result) => {\n      if (result == 'update') {\n        this.resetAdminPassword(id);\n      }\n    }, (reason) => {\n      console.log(reason)\n    });\n  }\n}\n","module.exports = \".super-admin-home-container{\\r\\n    width: calc(100% - 30px);\\r\\n    height: 100%;\\r\\n    position: relative;\\r\\n    margin-top: 20px;\\r\\n    overflow-y: scroll;\\r\\n    overflow-x: hidden;\\r\\n    max-height: calc(100vh - 150px);\\r\\n}\\r\\n.tableBodyInnerDiv1{\\r\\n    overflow-y: scroll;\\r\\n    max-height: calc(100vh - 150px);\\r\\n}\\r\\n.viewAllOrganization a{\\r\\n    cursor: pointer;\\r\\n}\\r\\n.admin-modal-form-wrapper{\\r\\n    width: 80%;\\r\\n    padding: 20px 40px;\\r\\n    margin: 10px auto;\\r\\n    border: 2px solid #b0b0b0;\\r\\n    border-radius: 10px;\\r\\n}\"","module.exports = \"<div>\\r\\n    <div class=\\\"customer-cotrol\\\">\\r\\n        <a href=\\\"#\\\" (click)=\\\"openAddOrg(content)\\\" class=\\\"btn customer-category-btn\\\">Add New Organization</a>\\r\\n        <a href=\\\"#\\\" (click)=\\\"openDeleteConfirmation()\\\" class=\\\"btn customer-category-btn\\\">Remove\\r\\n            Organization</a>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"super-admin-home-container\\\">\\r\\n    <div class=\\\"viewAllOrganization\\\">\\r\\n        <div class=\\\"tap-tbl tap-tbl-header\\\">\\r\\n            <table cellpadding=\\\"5\\\" cellspacing=\\\"5\\\" border=\\\"0\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th class=\\\"tbl-col-sm\\\">\\r\\n                            <label class=\\\"custom-control fill-checkbox\\\">\\r\\n                                <input type=\\\"checkbox\\\" (change)=\\\"checkEventListner($event, 'all')\\\"\\r\\n                                    class=\\\"fill-control-input\\\">\\r\\n                                <span class=\\\"fill-control-indicator\\\"></span>\\r\\n                            </label>\\r\\n                        </th>\\r\\n                        <th scope=\\\"col\\\">Organization Name</th>\\r\\n                        <th scope=\\\"col\\\">Administrator</th>\\r\\n                        <th scope=\\\"col\\\">Email</th>\\r\\n                        <th scope=\\\"col\\\">Create Date</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"tap-tbl tap-tbl-content\\\">\\r\\n            <table cellpadding=\\\"5\\\" cellspacing=\\\"5\\\" border=\\\"0\\\">\\r\\n                <tbody>\\r\\n                    <tr class=\\\"tap-table-row\\\" *ngFor=\\\"let data of organizationList; let i = index\\\">\\r\\n                        <td class=\\\"tbl-col-sm\\\">\\r\\n                            <label class=\\\"custom-control fill-checkbox\\\">\\r\\n                                <input [checked]=\\\"data.checkboxStatus\\\"\\r\\n                                    (change)=\\\"data.checkboxStatus = !data.checkboxStatus\\\" type=\\\"checkbox\\\"\\r\\n                                    class=\\\"fill-control-input\\\">\\r\\n                                <span class=\\\"fill-control-indicator\\\"></span>\\r\\n                            </label>\\r\\n                        </td>\\r\\n                        <td (click)=\\\"viewEditOrganization(data)\\\"><a>{{data.organizationName}}</a></td>\\r\\n                        <td>{{data.authorityName}}</td>\\r\\n                        <td>{{data.email}}</td>\\r\\n                        <td>{{data.createDateTime | date:'medium'}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"table-wrapper\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table table-bordered\\\">\\r\\n                    <thead class=\\\"tap-thead-dark\\\">\\r\\n                        <tr>\\r\\n                            <th>\\r\\n                                <div class=\\\"checkbox-wrap\\\">\\r\\n                                    <label class=\\\"custom-control fill-checkbox\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [checked]=\\\"allCheckBoxEnabler\\\" (change)=\\\"checkAllCheckbox($event, organizationList)\\\"\\r\\n                                            class=\\\"fill-control-input\\\">\\r\\n                                        <span class=\\\"fill-control-indicator\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </th>\\r\\n                            <th scope=\\\"col\\\">#</th>\\r\\n                            <th scope=\\\"col\\\">Organization Name</th>\\r\\n                            <th scope=\\\"col\\\">Administrator</th>\\r\\n                            <th scope=\\\"col\\\">Email</th>\\r\\n                            <th scope=\\\"col\\\">Create Date</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let data of organizationList; let i = index\\\">\\r\\n                            <td>\\r\\n                                <div class=\\\"checkbox-wrap\\\">\\r\\n                                    <label class=\\\"custom-control fill-checkbox\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [checked]=\\\"enableAllCheckBox\\\" (change)=\\\"checkboxChangeEvent($event, data)\\\"\\r\\n                                            value=\\\"{{data.organizationId}}\\\" class=\\\"fill-control-input\\\">\\r\\n                                        <span class=\\\"fill-control-indicator\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td scope=\\\"row\\\">{{i}}</td>\\r\\n                            <td (click)=\\\"viewEditOrganization(data)\\\"><a>{{data.organizationName}}</a></td>\\r\\n                            <td>{{data.authorityName}}</td>\\r\\n                            <td>{{data.email}}</td>\\r\\n                            <td>{{data.createDateTime | date:'medium'}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div> -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <form [formGroup]=\\\"addOrganizationForm\\\" (ngSubmit)=\\\"addOrgFormSubmit()\\\" novalidate>\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h5 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Oragnization</h5>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"admin-modal-form-wrapper\\\">\\r\\n                <div class=\\\"form-group has-danger\\\">\\r\\n                    <label for=\\\"formGroupExampleInput\\\">Organization Name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"organizationName\\\"\\r\\n                        id=\\\"formGroupExampleInput\\\" placeholder=\\\"organization name\\\" [ngClass]=\\\"{\\r\\n                            'is-invalid' : !organizationName.valid && organizationName.touched\\r\\n                        }\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                        Please choose a Organization name.\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"formGroupExampleInput\\\">Authorised Person</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"organizationAuthorityName\\\"\\r\\n                        id=\\\"formGroupExampleInput\\\" placeholder=\\\"administrator name\\\" [ngClass]=\\\"{\\r\\n                            'is-invalid' : !organizationAuthorityName.valid && organizationAuthorityName.touched\\r\\n                        }\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                        Please choose a user name.\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"is-invalid\\\" for=\\\"formGroupExampleInput2\\\">Email</label>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"organizationEmail\\\"\\r\\n                        id=\\\"formGroupExampleInput2\\\" placeholder=\\\"contact email\\\" [ngClass]=\\\"{\\r\\n                            'is-invalid' : !organizationEmail.valid && organizationEmail.touched\\r\\n                        }\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                        Please choose a valid email.\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"custom-file\\\">\\r\\n                                <input type=\\\"file\\\" formControlName=\\\"organizationProfilePic\\\"\\r\\n                                    (change)=\\\"profilePictureEventListner($event)\\\" class=\\\"custom-file-input\\\"\\r\\n                                    id=\\\"customFile\\\">\\r\\n                                <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\">Profile\\r\\n                                    Picture</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"custom-file\\\">\\r\\n                                <input type=\\\"file\\\" formControlName=\\\"organizationProfilePic\\\"\\r\\n                                    (change)=\\\"profileCoverEventListner($event)\\\" class=\\\"custom-file-input\\\"\\r\\n                                    id=\\\"customFile\\\">\\r\\n                                <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\">Cover\\r\\n                                    Picture</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"modal.close('Cancel click')\\\">Cancel</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #content2 let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-title\\\">Oragnization deletion</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close button\\\" aria-describedby=\\\"modal-title\\\"\\r\\n            (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <p><strong>Are you sure you want to delete <span class=\\\"text-primary\\\">Organization</span></strong></p>\\r\\n        <p>All information associated to this organization will be permanently deleted.\\r\\n            <span class=\\\"text-danger\\\">This operation can not be undone.</span>\\r\\n        </p>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"modal.dismiss('cancel')\\\">Cancel</button>\\r\\n        <button type=\\\"button\\\" ngbAutofocus class=\\\"btn btn-danger\\\" (click)=\\\"modal.close('delete')\\\">Ok</button>\\r\\n    </div>\\r\\n</ng-template>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgProgress } from '@ngx-progressbar/core';\nimport { AppComponent } from 'src/app/app.component';\nimport { Organization } from '../../common-models/organization';\nimport { SuperAdminService } from '../super-admin.service';\nimport { NgxNotificationService } from 'ngx-notification';\n\n\n@Component({\n  selector: 'app-organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.css']\n})\nexport class OrganizationComponent implements OnInit {\n\n  @ViewChild('content2') confirmationModal: ElementRef;\n\n  organizationList = Array<Organization>();\n\n  addOrganizationForm: FormGroup;\n  organizationName: FormControl;\n  organizationEmail: FormControl;\n  organizationAddress: FormControl;\n  organizationAuthorityName: FormControl;\n  organizationProfilePic: FormControl;\n  organizationCoverPic: FormControl;\n  base64textStringProfile: string;\n  base64textStringCover: string;\n\n  constructor(\n    private superAdminService: SuperAdminService,\n    private modalService: NgbModal,\n    private progressBar: NgProgress,\n    private router: Router,\n    private appComponet: AppComponent,\n    private toster: NgxNotificationService\n  ) {\n  }\n\n  // fetch all organizations\n  ngOnInit() {\n    this.superAdminService.getAllOrganization().subscribe((data) => {\n      if (data == null) {\n        this.toster.sendMessage(`Organization fetch failed!`, 'danger', 'top-right');\n      } else if (data.length > 0) {\n        this.organizationList = data;\n        this.organizationList.forEach(org => org.checkboxStatus = false);\n      } else {\n\n      }\n    });\n    this.setFormControls();\n    this.setFormGroup();\n  }\n\n  openAddOrg(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n      centered: true\n    }).result.then((result) => {\n      console.log(result)\n    }, (reason) => {\n      console.log(reason)\n    });\n  }\n\n  setFormControls() {\n    this.organizationName = new FormControl('', [\n      Validators.required,\n      Validators.minLength(5)\n    ]);\n    this.organizationEmail = new FormControl('', [\n      Validators.required,\n    ]);\n    this.organizationAuthorityName = new FormControl('', [\n      Validators.required,\n    ]);\n    this.organizationAddress = new FormControl();\n    this.organizationProfilePic = new FormControl();\n    this.organizationCoverPic = new FormControl();\n  }\n\n  setFormGroup() {\n    this.addOrganizationForm = new FormGroup({\n      organizationName: this.organizationName,\n      organizationEmail: this.organizationEmail,\n      organizationAddress: this.organizationAddress,\n      organizationProfilePic: this.organizationProfilePic,\n      organizationAuthorityName: this.organizationAuthorityName\n    });\n  }\n\n  profilePictureEventListner(evt) {\n    var files = evt.target.files;\n    var file = files[0];\n    if (files && file) {\n      var reader = new FileReader();\n      reader.onload = this._handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  _handleReaderLoaded(readerEvt) {\n    var binaryString = readerEvt.target.result;\n    this.base64textStringProfile = btoa(binaryString);\n    this.base64textStringCover = btoa(binaryString);\n  }\n\n  profileCoverEventListner(evt) {\n    var files = evt.target.files;\n    var file = files[0];\n    if (files && file) {\n      var reader = new FileReader();\n      reader.onload = this._handleReaderLoaded2.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  _handleReaderLoaded2(readerEvt) {\n    var binaryString = readerEvt.target.result;\n    this.base64textStringCover = btoa(binaryString);\n  }\n\n\n\n  checkEventListner(evt, type: string) {\n    if (type == 'all') {\n      if (evt.target.checked) {\n        this.checkAllRow();\n      } else {\n        this.uncheckAllRow();\n      }\n    }\n  }\n\n  checkAllRow() {\n    this.organizationList.forEach(org => (org.checkboxStatus = true));\n  }\n\n  uncheckAllRow() {\n    this.organizationList.forEach(org => (org.checkboxStatus = false));\n  }\n\n  addOrgFormSubmit() {\n    if (this.addOrganizationForm.valid) {\n      if (this.organizationName.valid && this.organizationEmail.valid) {\n        this.progressBar.start();\n        let orgObj = new Organization();\n        // Address not fixed\n        orgObj.organizationName = this.organizationName.value;\n        orgObj.email = this.organizationEmail.value;\n        orgObj.profilePhotoByte = this.base64textStringProfile;\n        orgObj.coverPhotoByte = this.base64textStringCover;\n        orgObj.authorityName = this.organizationAuthorityName.value;\n        this.superAdminService.saveOrganization(orgObj).subscribe((data) => {\n          this.organizationList.unshift(data)\n          this.progressBar.complete();\n          this.addOrganizationForm.reset();\n        });\n        this.progressBar.set(0.8);\n        this.modalService.dismissAll();\n      }\n    }\n  }\n\n  deleteSelectedOrg() {\n    let idArray = [];\n\n    this.organizationList.forEach(org => {\n      if (org.checkboxStatus) {\n        idArray.push(org.organizationId);\n      }\n    });\n    this.superAdminService.deleteMultipleOrganization(idArray).subscribe((reslt) => {\n      if (reslt) {\n        let temparray = Array<Organization>();\n        this.organizationList.forEach(org => {\n          if (!org.checkboxStatus) {\n            temparray.push(org);\n          }\n        });\n        this.organizationList = [];\n        temparray.forEach(obj => {\n          this.organizationList.push(obj);\n        });\n        this.toster.sendMessage(`Organization delete Success!`, 'success', 'top-right');\n      } else {\n        this.toster.sendMessage(`Organization delete failed!`, 'danger', 'top-right');\n      }\n    });\n  }\n\n  openDeleteConfirmation() {\n    this.modalService.open(this.confirmationModal).result.then((result) => {\n      if (result === 'delete') {\n        this.deleteSelectedOrg();\n      }\n    }, (reason) => {\n      console.log(reason)\n    });\n  }\n\n  deleteConfirmation(): boolean {\n    return true;\n  }\n\n  viewEditOrganization(data: Organization) {\n    this.router.navigate(['/superadmin/organization', data.organizationId]);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  pagenot-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenot-found',\n  templateUrl: './pagenot-found.component.html',\n  styleUrls: ['./pagenot-found.component.css']\n})\nexport class PagenotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"side-nav desktop-side-nav\\\">\\n  <ul>\\n    <li><a routerLink=\\\"./organization\\\" routerLinkActive=\\\"active\\\">Organization management</a></li>\\n    <li><a routerLink=\\\"#\\\" (click)=\\\"logout()\\\" routerLinkActive=\\\"active\\\">logout </a></li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CommonLoginService } from '../../common-login/common-login.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor(private commenService: CommonLoginService) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.commenService.removeUserDataFromCacheAndLocal();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { PagenotFoundComponent } from './pagenot-found/pagenot-found.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditOrganizationComponent } from './edit-organization/edit-organization.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminHomeComponent,\n    children: [\n      {\n        path:'',\n        redirectTo:'organization',\n        pathMatch:'full'\n      },\n      {\n        path: 'organization',\n        component: OrganizationComponent\n      },\n      {\n        path: 'organization/:id',\n        component: EditOrganizationComponent\n      },\n      {\n        path: '**',\n        component: PagenotFoundComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SuperAdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SuperAdminRoutingModule } from './super-admin-routing.module';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { PagenotFoundComponent } from './pagenot-found/pagenot-found.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { AdminHomeContentComponent } from './admin-home-content/admin-home-content.component';\nimport { SuperAdminService } from './super-admin.service';\nimport { EditOrganizationComponent } from './edit-organization/edit-organization.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SuperAdminRoutingModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    AdminHomeComponent,\n    SidebarComponent,\n    PagenotFoundComponent,\n    OrganizationComponent,\n    AdminHomeContentComponent,\n    EditOrganizationComponent\n  ],\n  providers: [\n    SuperAdminService\n  ]\n})\nexport class SuperAdminModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Organization } from '../common-models/organization';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { UserDetails } from '../common-models/user-details';\n\nconst ROOT_URL_ORGANIZATION = '/tap/api/admin/organization';\nconst FETCH_ALL_USERS = '/tap/api/admin/users';\nconst FETCH_ALL_USERS_BY_NAME = '/tap/api/admin/users/name/';\nconst FETCH_ALL_USERS_BY_PHONE = '/tap/api/admin/users/phone/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuperAdminService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  getAllOrganization(): Observable<any> {\n    return this.http.get<Organization>(ROOT_URL_ORGANIZATION);\n  }\n\n  getOrganizationById(id: number): Observable<Organization> {\n    return this.http.get<Organization>(ROOT_URL_ORGANIZATION + '/' + id);\n  }\n\n  saveOrganization(org: Organization): Observable<Organization> {\n    return this.http.post<Organization>(ROOT_URL_ORGANIZATION, org);\n  }\n\n  updateOrganization(org: Organization): Observable<Organization> {\n    return this.http.put<Organization>(ROOT_URL_ORGANIZATION, org);\n  }\n\n  resetAdminPassword(id: number): Observable<any> {\n    return this.http.put<any>(`/tap/api/admin/reset-organization//${id}`, null);\n  }\n\n  deleteSingleOrganization(id: number) {\n    return this.http.delete(ROOT_URL_ORGANIZATION + '/' + id);\n  }\n\n  deleteMultipleOrganization(ids: any) {\n    return this.http.post(ROOT_URL_ORGANIZATION + '/delete', ids);\n  }\n\n  getAllCustomer(): Observable<UserDetails[]> {\n    return this.http.get<UserDetails[]>(FETCH_ALL_USERS);\n  }\n\n  getAllCustomerByFirstName(name: string): Observable<UserDetails> {\n    return this.http.get<UserDetails>(FETCH_ALL_USERS_BY_NAME + name);\n  }\n\n  getAllCustomerByPhoneNumber(phone: string): Observable<UserDetails> {\n    return this.http.get<UserDetails>(FETCH_ALL_USERS_BY_PHONE + phone);\n  }\n}\n"],"sourceRoot":""}
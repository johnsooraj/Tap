package com.cyspan.tap.utils;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;

import net.coobird.thumbnailator.Thumbnails;

public class UploadFilesFromBytes {

	public static String WINDOWS_IMAGE_LOCATION_1 = "C:\\Users\\";
	public static String WINDOWS_IMAGE_LOCATION_2 = "\\Pictures\\Tap";
	public static char osNameLinux = 'L';

	public static final int smallImageWidth = 70;

	public static final int smallImageHeigth = 70;

	public static File imageFile;
	static Logger log = Logger.getLogger(UploadFilesFromBytes.class.getName());

	/**
	 * Save Image Actual Size in directory
	 * 
	 * @return URL of saved image
	 * @param fileBytes
	 *            byte array of new image
	 * @param path
	 *            directory location, NB: Default location of linux file system
	 * @param folder
	 *            directory location, NB: Default location of linux file system
	 * @param fileName
	 *            Random value Generated by Java
	 * @param extension
	 *            File Extension to save NB: for image use '.png'
	 * @param width
	 *            Width of Image
	 * @param height
	 *            Height of Image
	 * @param request
	 *            HttpServletRequest
	 */
	public static String uploadFile(byte[] fileBytes, String path, String folder, String fileName, String extension,
			int width, int height, HttpServletRequest request) {

		/*
		 * Checking OS name, For Choose File location, Only for Development
		 */
		File file2 = null;
		String imageUrl = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort();

		if (System.getProperty("os.name").charAt(0) == osNameLinux) {
			imageFile = new File(path);
		} else {
			String userName = System.getProperty("user.name");
			if (userName != null) {
				imageFile = new File(WINDOWS_IMAGE_LOCATION_1 + userName + WINDOWS_IMAGE_LOCATION_2);
			}
		}

		if (!imageFile.exists()) {
			imageFile.mkdirs();
		}
		try {
			file2 = new File(imageFile.getAbsolutePath() + "/" + fileName + extension);
			BufferedOutputStream buffStream = new BufferedOutputStream(new FileOutputStream(file2));
			buffStream.write(fileBytes);
			buffStream.close();
			Thumbnails.of(file2).size(width, height).toFile(file2);

		} catch (IOException e) {
			log.error(e.getMessage());
		}
		if (System.getProperty("os.name").charAt(0) == osNameLinux) {
			return imageUrl + folder + "/" + fileName + extension;
		} else {
			return file2.getAbsolutePath();
		}
	}

	/**
	 * Save Image in small resolution
	 * 
	 * @return URL of saved image
	 * @param fileBytes
	 *            byte array of new image
	 * @param path
	 *            directory location, NB: Default location of linux file system
	 * @param folder
	 *            directory location, NB: Default location of linux file system
	 * @param fileName
	 *            Random value Generated by Java
	 * @param extension
	 *            File Extension to save NB: for image use '.png'
	 * @param request
	 *            HttpServletRequest
	 */
	public static String uploadSmallFile(byte[] fileBytes, String path, String folder, String fileName,
			String extension, HttpServletRequest request) {

		/*
		 * Checking OS name, For Choose File location, Only for Development
		 */
		File file2 = null;
		String imageUrl = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort();

		if (System.getProperty("os.name").charAt(0) == osNameLinux) {
			imageFile = new File(path);
		} else {
			String userName = System.getProperty("user.name");
			if (userName != null) {
				imageFile = new File(WINDOWS_IMAGE_LOCATION_1 + userName + WINDOWS_IMAGE_LOCATION_2);
			}
		}

		if (!imageFile.exists()) {
			imageFile.mkdirs();
		}
		try {
			file2 = new File(imageFile.getAbsolutePath() + "/" + fileName + extension);
			BufferedOutputStream buffStream = new BufferedOutputStream(new FileOutputStream(file2));
			buffStream.write(fileBytes);
			buffStream.close();
			Thumbnails.of(file2).size(smallImageWidth, smallImageHeigth).toFile(file2);

		} catch (IOException e) {
			log.error(e.getMessage());
		}
		if (System.getProperty("os.name").charAt(0) == osNameLinux) {
			return imageUrl + folder + "/" + fileName + extension;
		} else {
			return file2.getAbsolutePath();
		}
	}
}
